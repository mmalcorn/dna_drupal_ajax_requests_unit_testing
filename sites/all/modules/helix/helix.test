<?php
class HelixCaseTest extends DrupalUnitTestCase
{
    public static function getInfo()
    {
        return array(
            'name' => 'Helix',
            'description' => 'A form that allows a user to enter half of their DNA helix.  Upon submit, it will generate the other half.',
            'group' => 'Custom Modules',
        );
    }

    function testGenerateDna()
    {
        //English description
        //displays desired result during test
        $description = 'A single nucleotide shows its opposite - (A) is displayed as (T)';

        //Arrange
        //create input
        $input = 'A';

        //Act
        //run the function we're testing with input and store output in $result.
        $result = generate_dna($input);

        //Assert
        //This time we're using assertEqual
        //If the first argument == second argument, test passes.
        //Again pass in $description for display.
        $expected_output = 'T';
        $this->assertEqual($result, $expected_output, $description);


        $description = 'A single nucleotide shows its opposite - (C) is displayed as (G)';
        $input = 'C';
        $result = generate_dna($input);
        $expected_output = 'G';
        $this->assertEqual($result, $expected_output, $description);

        $description = 'A sequence of two nucleotides shows its respective opposites - (CT) is displayed as (GA)';
        $input = 'CT';
        $result = generate_dna($input);
        $expected_output = 'GA';
        $this->assertEqual($result, $expected_output, $description);

        $description = 'A sequence of three nucleotides shows its respective opposites - (ACT) is displayed as (TGA)';
        $input = 'ACT';
        $result = generate_dna($input);
        $expected_output = 'TGA';
        $this->assertEqual($result, $expected_output, $description);
    }

}
